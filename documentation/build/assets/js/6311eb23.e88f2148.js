"use strict";(self.webpackChunkremote_dev_env=self.webpackChunkremote_dev_env||[]).push([[5300],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>p});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=n.createContext({}),s=function(e){var a=n.useContext(c),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},d=function(e){var a=s(e.components);return n.createElement(c.Provider,{value:a},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},g=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(t),g=r,p=u["".concat(c,".").concat(g)]||u[g]||f[g]||o;return t?n.createElement(p,i(i({ref:a},d),{},{components:t})):n.createElement(p,i({ref:a},d))}));function p(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=g;var l={};for(var c in a)hasOwnProperty.call(a,c)&&(l[c]=a[c]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}g.displayName="MDXCreateElement"},4554:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=t(7462),r=(t(7294),t(3905));const o={sidebar_position:4},i=void 0,l={unversionedId:"Single Sign-On with Keycloak/Integration with Grafana",id:"Single Sign-On with Keycloak/Integration with Grafana",title:"Integration with Grafana",description:"Integrate Keycloak with Grafana",source:"@site/docs/Single Sign-On with Keycloak/Integration with Grafana.md",sourceDirName:"Single Sign-On with Keycloak",slug:"/Single Sign-On with Keycloak/Integration with Grafana",permalink:"/docs/Single Sign-On with Keycloak/Integration with Grafana",draft:!1,editUrl:"https://github.com/Chamssiddine/remote-development-environment/docs/Single Sign-On with Keycloak/Integration with Grafana.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"How to Integrate Keycloak with AWX",permalink:"/docs/Single Sign-On with Keycloak/Integration with AWX"},next:{title:"Backup",permalink:"/docs/category/backup"}},c={},s=[{value:"Integrate Keycloak with Grafana",id:"integrate-keycloak-with-grafana",level:2},{value:"1. Create a &quot;grafana&quot; Realm using Keycloak&#39;s web interface.",id:"1-create-a-grafana-realm-using-keycloaks-web-interface",level:3},{value:"2. Navigate to the location where the Keycloak Terraform file is stored:",id:"2-navigate-to-the-location-where-the-keycloak-terraform-file-is-stored",level:3},{value:"3. Modify the default values of the variables.tf file to match the IP or domain of your Keycloak and Grafana services:",id:"3-modify-the-default-values-of-the-variablestf-file-to-match-the-ip-or-domain-of-your-keycloak-and-grafana-services",level:3},{value:"4. Run the following command to create the configuration and users:",id:"4-run-the-following-command-to-create-the-configuration-and-users",level:3},{value:"5. Navigate to your newly created Realm in Keycloak and add a password for your <strong>USER</strong> and <strong>ADMIN</strong>.",id:"5-navigate-to-your-newly-created-realm-in-keycloak-and-add-a-password-for-your-user-and-admin",level:3},{value:"6. In Grafana_values.yaml, update the IP address in the grafana.ini section.",id:"6-in-grafana_valuesyaml-update-the-ip-address-in-the-grafanaini-section",level:3},{value:"7. Navigate back to Grafana Chart and Upgrade the changes you made",id:"7-navigate-back-to-grafana-chart-and-upgrade-the-changes-you-made",level:3}],d={toc:s},u="wrapper";function f(e){let{components:a,...t}=e;return(0,r.kt)(u,(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"integrate-keycloak-with-grafana"},"Integrate Keycloak with Grafana"),(0,r.kt)("h3",{id:"1-create-a-grafana-realm-using-keycloaks-web-interface"},'1. Create a "grafana" Realm using Keycloak\'s web interface.'),(0,r.kt)("h3",{id:"2-navigate-to-the-location-where-the-keycloak-terraform-file-is-stored"},"2. Navigate to the location where the Keycloak Terraform file is stored:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd infrastructure/modules/keycloak\n")),(0,r.kt)("h3",{id:"3-modify-the-default-values-of-the-variablestf-file-to-match-the-ip-or-domain-of-your-keycloak-and-grafana-services"},"3. Modify the default values of the variables.tf file to match the IP or domain of your Keycloak and Grafana services:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# ip or hostname of the keycloak server\nvariable "keycloak" {\n  type        = string \n  description = "keycloak ip or hostname"\n  default     = "http://<put here the ip or the domain of keycloak service>"\n}\n# grafana ip or hostname\nvariable "grafana" {\n  type        = string \n  description = "grafana redirect uri ip or hostname"\n  default     = "http://<put here the ip or the domain of grafana service>/login/generic_oauth"\n}\n')),(0,r.kt)("h3",{id:"4-run-the-following-command-to-create-the-configuration-and-users"},"4. Run the following command to create the configuration and users:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"terraform init\nterraform apply --auto-aprouve\n")),(0,r.kt)("h3",{id:"5-navigate-to-your-newly-created-realm-in-keycloak-and-add-a-password-for-your-user-and-admin"},"5. Navigate to your newly created Realm in Keycloak and add a password for your ",(0,r.kt)("strong",{parentName:"h3"},"USER")," and ",(0,r.kt)("strong",{parentName:"h3"},"ADMIN"),"."),(0,r.kt)("h3",{id:"6-in-grafana_valuesyaml-update-the-ip-address-in-the-grafanaini-section"},"6. In Grafana_values.yaml, update the IP address in the grafana.ini section."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# go to the line  692\ngrafana.ini:\n  auth.generic_oauth:\n      enabled: true\n      name: Keycloak\n      allow_sign_up: true\n      scopes: profile,email,groups\n      auth_url: <Keycloak service ip or domain>/auth/realms/grafana/protocol/openid-connect/auth\n      token_url: <Keycloak service ip or domain>/auth/realms/grafana/protocol/openid-connect/token\n      api_url: <Keycloak service ip or domain>/auth/realms/grafana/protocol/openid-connect/userinfo\n      client_id: grafana\n      client_secret: grafana-client-secret\n      role_attribute_path: contains(groups[*], 'grafana-admin') && 'Admin' || contains(groups[*], 'grafana-dev') && 'Editor' || 'Viewer'\n  server:\n  # this is for grafana url\n      root_url: <grafana ip or domain name>\n")),(0,r.kt)("h3",{id:"7-navigate-back-to-grafana-chart-and-upgrade-the-changes-you-made"},"7. Navigate back to Grafana Chart and Upgrade the changes you made"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm upgrade grafana grafana/grafana -f grafana_values.yaml\n")))}f.isMDXComponent=!0}}]);